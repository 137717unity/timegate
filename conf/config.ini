[server]

# host
# TimeGate server base URI
# Example: host = http://timegate.example.com
host = http://timetravel.mementoweb.org/<TG>

# api_time_out
# Timeout for any API request in seconds
api_time_out = 6

[handler]
# handler_class
# Optional path to handler class. If not provided. the program will search core/extension for a possible handler
handler_class = core.extensions_all.github.GitHubHandler

# use_timemap
# Optional boolean to define wether the program can handle timemap requests.
use_timemap = true

# is_vcs
# When true, the mementos are served from a Version Control System
# When false, the mementos are served from a Snapshot system
# This implies that the best memento to a date d is either, respectively
# The closest to time d, before d
# The absolute closest to time d
is_vcs = false

# base_uri
# (Optional) String that will be prepended to requested URI if it is not already present
# For example, if the server runs at `http://timegate.example.com` and all original resources begin with `http://example.com/res/{resource ID}`,
# then setting `base_uri = http://example.com/res/` will allow short requests such `http://timegate.example.com/{resource ID}`
base_uri =

[cache]

# cache_activated
# When true, the cache stores TimeMaps from API that allows batch (get_all_mementos) requests, except for requests with `Cache-Control: no-cache` header, which will always return fresh Mementos.
# When false, no cache file will be created
cache_activated = true

# cache_refresh_time
# Time in seconds, for which it is assumed that a TimeMap didn't change. Any TimeGate request for a datetime past this period (or any TimeMap request past this period) will trigger a refresh of the cached value. Default 3600 seconds
cache_refresh_time = 3600

# cache_directory
# Cache directory relative path for data files. Make sure that this directory is empty or else the cache will start deleting random files.
cache_directory = cache/

# cache_max_size
# Maximum size for data cached files, in MB. This limit will hardly ever be reached. The server will start deleting cached values before
cache_max_size = 250