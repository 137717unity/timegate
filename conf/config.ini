[server]

# host
# TimeGate server base URI
# Example: host = http://timegate.example.com
host = http://127.0.0.1:9999

# strict_datetime
# When set to true, the user must use the RFC 1123 date in 'Accept-Datetime' header
# When set to false, the server will also try to parse other time formats
strict_datetime = true

# api_time_out
# Timeout for any API request in seconds
api_time_out = 5

[handler]

# is_vcs
# When true, the mementos are served from a Version Control System
# When false, the mementos are served from a Snapshot system
# This implies that the best memento to a date d is either, respectively
# The closest to time d, before d
# The absolute closest to time d
is_vcs = true

# base_uri
# (Optional) String that will be prepended to requested URI if it is not already present
# For example, if the server runs at `http://timegate.example.com` and all original resources begin with `http://example.com/res/{resource ID}`,
# then setting `base_uri = http://example.com/res/` will allow short requests such `http://timegate.example.com/{resource ID}`
base_uri =

[cache]

# activated
# When true, the cache stores TimeMaps from API that allows batch (get_all_mementos) requests
# When false, no cache file will be created
activated = true

# refresh_time
# Time in seconds, for which it is assumed that a TimeMap didn't change. Any TimeGate request for a datetime past this period (or any TimeMap request past this period) will trigger a refresh of the cached value. Default 3600 seconds
refresh_time = 3600

# cache_directory
# Cache directory relative path for data files. Make sure that this directory is empty or else the cache will start deleting random files.
cache_directory = cache/

# cache_max_size
# Maximum size for data cached file, in MB
cache_max_size = 200