[server]

# host
# TimeGate server base URI
# Example: if host = http://tg.example.com
# Then a Memento user can issue TimeGate requests for any URI-R using `HTTP GET http://tg.example.com/timegate/URI-R`
# And TimeMaps requests (if activated) using `HTTP GET http://tg.example.com/timemap/link/URI-R` or `HTTP GET http://tg.example.com/timemap/json/URI-R`. For `link` and `json` formats.
host = http://tg.example.com

# api_time_out
# Timeout for any API request in seconds when using the Handler.request method
# Default 6 seconds
api_time_out = 20


[handler]

# handler_class
# Optional path to handler class. If not provided. the program will search core/handler for a possible handler
# Example: handler_class = core.handler_examples.github.GitHubHandler
# Default empty
handler_class =core.handler_examples.github.GitHubHandler

# use_timemap
# Optional boolean to define whether the program can handle TimeMap requests.
# Default false
use_timemap = true

# is_vcs
# When false, the best memento is the absolute closest to the requested date.
# When true, the best Memento for a requested datetime T will be the closest before T.
# Default false
is_vcs = false

# base_uri
# (Optional) String that will be prepended to requested URI if it is not already present
# For example, if the server runs at `http://tg.example.com` and all original resources begin with `http://example.com/res/{resource ID}`,
# then setting `base_uri = http://example.com/res/` will allow short requests such  as
# `http://tg.example.com/timegate/{resource ID}` instead of
# `http://tg.example.com/timegate/http://example.com/res/{resource ID}`
# Default empty string
base_uri =


[cache]

# cache_activated
# When true, the cache stores the entire history from handlers that allows batch (get_all_mementos) requests, except for requests with `Cache-Control: no-cache` header, which will always return fresh Mementos.
# When false, no cache file will be created
# Default true
cache_activated = false

# cache_refresh_time
# Time in seconds, for which it is assumed that a TimeMap didn't change. Any TimeGate request for a datetime past this period (or any TimeMap request past this period) will trigger a refresh of the cached value.
# Default 86400 (one day)
cache_refresh_time = 86400

# cache_directory
# Cache directory relative path for data files. Make sure that this directory is empty or else the cache will start deleting random files.
# Default cache/
cache_directory = cache/

# cache_max_values
# Maximum number of stored TimeMaps in the cache.
# Modify this to manage on how big your TimeMaps can become ( depending on number of elements per TimeMap and the length of the URIs)
# Default 250
cache_max_values = 250